[{"E:\\@RepoGitHub\\react-api-client-demo\\demo1\\src\\index.js":"1","E:\\@RepoGitHub\\react-api-client-demo\\demo1\\src\\App.js":"2","E:\\@RepoGitHub\\react-api-client-demo\\demo1\\src\\reportWebVitals.js":"3","E:\\@RepoGitHub\\react-api-client-demo\\demo1\\src\\history.js":"4","E:\\@RepoGitHub\\react-api-client-demo\\demo1\\src\\components\\grid\\index.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":295,"mtime":1608184069193,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":87,"mtime":1608183848246,"results":"10","hashOfConfig":"7"},{"size":1207,"mtime":1608183976399,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"roq4ij",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"E:\\@RepoGitHub\\react-api-client-demo\\demo1\\src\\index.js",[],["24","25"],"E:\\@RepoGitHub\\react-api-client-demo\\demo1\\src\\App.js",[],"E:\\@RepoGitHub\\react-api-client-demo\\demo1\\src\\reportWebVitals.js",[],"E:\\@RepoGitHub\\react-api-client-demo\\demo1\\src\\history.js",[],"E:\\@RepoGitHub\\react-api-client-demo\\demo1\\src\\components\\grid\\index.js",["26"],"import React, { useEffect, useState, useMemo } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst Grid = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getData = () => {\r\n            axios\r\n                .get(\"https://jsonplaceholder.typicode.com/comments\")\r\n                .then((response => {\r\n                    setData(response.data);\r\n                    console.log(response.data);\r\n                }))\r\n                .catch((erro) => {\r\n                    console.log(erro);\r\n                });\r\n        };\r\n\r\n        getData();\r\n\r\n    }, [])\r\n    return (\r\n        <div>\r\n\r\n            <table className=\"table table-striped\">\r\n                <tbody>\r\n                {data.map((item, i) => (\r\n                    <tr>\r\n                        <th scope=\"row\" key={item.id}>\r\n                                        {item.id}\r\n                        </th>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.email}</td>\r\n                        <td>{item.body}</td>\r\n                    </tr>\r\n                ))}\r\n\r\n                </tbody>\r\n\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Grid;",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":38,"nodeType":"33","messageId":"34","endLine":1,"endColumn":45},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]